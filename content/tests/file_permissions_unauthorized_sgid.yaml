title: Ensure all SGID executables are authorized

description: |-
  The SGID (set group id) bit should be set only on files that were installed via authorized
  means. A straightforward means of identifying unauthorized SGID files is determine if any were
  not installed as part of an RPM package, which is cryptographically verified. Investigate the
  origin of any unpackaged SGID files.
  
  This configuration check considers authorized SGID files
  those which were installed via RPM. It is assumed that when an individual has sudo access to
  install an RPM and all packages are signed with an organizationally-recognized GPG key, the
  software should be considered an approved package on the system. Any SGID file not deployed
  through an RPM will be flagged for further review.

blocks:
  - id: collect/sguid_files
    type: probe
  - id: sgid_files
    title: Collect SGID files as a list
    type: filter
    kind: cel
    sources:
      - "@collect"
    properties:
      expression: "arguments.files.filter(f, permissions_match(f.permissions, '??????s???')).map(f, f.file)"
      arguments:
        files: "$1"
  - id: filter_unowned_files
    title: '...'
    type: probe
    kind: process_output
    sources:
      - sgid_files
    properties:
      executable: /usr/bin/rpm
      arguments: ['-qf', '$1']
      rc_ok: [0, 1, 4, 15]
    wrapper:
      regex:
        expression: "^file (.+?) is not owned by any package$"
        plain: true
    encoding: unicode_escape
  - id: compose_result
    title: Filter all stray SGID files
    type: filter
    kind: cel
    sources:
      - "@collect"
      - filter_unowned_files
    properties:
      expression: "arguments.files.filter(f, f.file in arguments.stray)"
      arguments:
        files: "$1"
        stray: "$2"
  - id: /any_exist
    type: filter
    sources:
      - "compose_result"
